set guifont=Andale_Mono:h16,Menlo:h16,Consolas:h16,Courier_New:h16
set wrap

set rnu!
set ignorecase
set hlsearch
set nospell
set autowrite                       " Automatically write a file when leaving a modified buffer
"set autowriteall
set autoread
set go-=m
set ts=2
set sw=2
set softtabstop=2               " Let backspace delete indent
if has('win32')
    au GUIEnter * simalt ~x
else
    au GUIEnter * call MaximizeWindow()
endif
 
function! MaximizeWindow()
    silent !wmctrl -r :ACTIVE: -b add,maximized_vert,maximized_horz
endfunction 

"nmap <c-v> p
" rg
if executable('rg')
    set grepprg=rg\ --color=never\ --vimgrep\ --no-heading
    set grepformat=%f:%l:%c:%m,%f:%l:%m
    let g:ctrlp_user_command.fallback = 'rg %s --files --color=never --glob ""'
    let g:ctrlp_use_caching = 0
    let g:ackprg = 'rg --vimgrep --no-heading'
endif

" .spf13-vim-3/.vim/bundle/vim-coloresque/after/syntax/css/
"  gg125

" 菜单配置
let g:ssMenuList = [ "choose:" , ":echo '123'|!start cmd" ]
call add(g:ssMenuList, "!start Powershell")
call add(g:ssMenuList, "echo '打开当前目录'|!start explorer %:p:h")

function! SSMenu()
  let s:_cmd = ""
  let s:_inputList = map(copy(g:ssMenuList), {key, val -> ' ' . key . ': ' . val})
  let s:_cmd = inputlist(s:_inputList)
  if s:_cmd>0
    exe get(g:ssMenuList, s:_cmd)
  endif
endfunction
"let g:ssMenuList+=["!start Powershell"]

map <leader>s :call SSMenu()<CR>
unmap <leader>ss
unmap <leader>sl
unmap <leader>sc
":map <F4> [I:let nr = input("Which one: ")<Bar>exe "normal " . nr ."[\t"<CR>
  "
:set isk+=-
:set isk+=#
:set isk+=.

imap <c-v> <c-r>+
cmap <c-v> <c-r>+


let g:ctrlp_working_path_mode = 'a'
let g:ctrlp_custom_ignore = {
            \ 'dir':  '\.git$\|\.hg$\|\.svn$\|\.idea$',
            \ 'file': '\.exe$\|\.so$\|\.dll$\|\.pyc$' }

map <leader>j <C-W>j
map <leader>k <C-W>k
map <leader>h <C-W>h
map <leader>l <C-W>l
map <leader>x :q<CR>
map <leader>o <C-W>o
map <leader>- <C-W>_<C-W>\|
unmap <leader>jt
cunmap cwd
cmap cd, cd %:p:h
unmap <leader>ew
unmap <leader>es
unmap <leader>ev
unmap <leader>et
map Q :q<CR>
nnoremap <silent> <leader>gd :Gdiff<CR>
map <leader>oe :!start explorer %:p:h<Cr>

map <leader>r <ESC>:CtrlPMRUFiles<CR>


map W :w<CR>

" tags
" set tags=tags;  " ; 不可省略，表示若当前目录中不存在tags， 则在父目录中寻找。
map <C-F12> :!ctags -R --exclude=node_modules --c++-kinds=+p --fields=+iaS --extra=+q .<CR> 
